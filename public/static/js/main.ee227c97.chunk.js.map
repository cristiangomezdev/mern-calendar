{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLogInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","ariaHideApp","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","path","exact","rootReducer","combineReducers","action","cheking","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee227c97.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n\r\n    uiOpenModal:'[ui] Open Modal',\r\n    uiCloseModal:'[ui] Close modal',\r\n    eventLogout:'[event] Logout event',\r\n    eventStartAddNew:'[event] Start add new',\r\n    eventAddNew:'[event] Add new',\r\n    eventSetActive:'[event] Set Active',\r\n    eventClearActiveEvent:'[event] Clear active event',\r\n    eventUpdated:'[event] Event updated',\r\n    eventDeleted:'[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    \r\n    authCheckingFinish:'[auth] finish checking login state',\r\n    authStartLogin:'[auth] start login',\r\n    authLogin:'[auth] Login',\r\n    authStartRegister:'[auth] Start Register',\r\n    authStartStartTokenRenew:'[auth] Start token renew',\r\n    authLogout:'[auth] Logout'\r\n}","import moment from 'moment';\r\nexport const prepareEvents =  (events=[]) =>{\r\n    return events.map((e)=>({\r\n        ...e,\r\n        end:moment(e.end).toDate(),\r\n        start:moment(e.start).toDate()\r\n    }))\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\nimport getState from 'react';\r\n\r\nexport const eventStartAddNew = ( event )=>{\r\n    return async(dispatch,getState) => {\r\n        const {uid,name} = getState().auth;\r\n\r\n        try {\r\n            const resp = fetchConToken('events',event,'POST');\r\n            const body = await (await resp).json();\r\n            console.log(body)\r\n            if(body.ok){\r\n                event.id =body.evento.id;\r\n                event.user = {\r\n                    _id:uid,\r\n                    name:name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const eventAddNew = (event)=>({\r\n    type:types.eventAddNew,\r\n    payload:event\r\n})\r\n\r\nexport const eventSetActive = (event)=>({\r\n    type:types.eventSetActive,\r\n    payload:event\r\n})\r\n\r\nexport const eventClearActiveEvent = () =>({\r\n    type:types.eventClearActiveEvent\r\n})\r\nexport const eventStartUpdate = (event) =>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event))\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nexport const eventUpdated = (event) =>({\r\n    type:types.eventUpdated,\r\n    payload:event\r\n})\r\nexport const eventStartDelete = (event) =>{\r\n    return async(dispatch)=>{\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                dispatch(eventDeleted(event))\r\n            }else{\r\n                Swal.fire('Error','body.msg','error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n const eventDeleted = () =>({\r\n    type:types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = ( ) =>{\r\n    return async(dispatch)=>{\r\n        \r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos)\r\n            console.log(events)\r\n            dispatch(eventLoaded(events))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventLoaded = ( events) =>({\r\n    type:types.eventLoaded,\r\n    payload:events\r\n})\r\nexport const eventLogout= () =>({\r\n    type:types.eventLogout\r\n})","import { fetchSinToken, fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n\r\n}\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n\r\n            dispatch(checkingFinish())\r\n        }\r\n\r\n    }\r\n}\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\nexport const login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout())\r\n        dispatch(logout());\r\n    }\r\n}\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport './login.css';\r\nimport {useForm} from '../../hooks/useForm'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin,startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [formLoginValues,handleLogInputChange] = useForm({\r\n        lEmail:'',\r\n        lPassword:''\r\n    })\r\n    const [formRegisterValues,handleRegisterInputChange] = useForm({\r\n        rName:'Nando',\r\n        rEmail:'nando@gmail.com',\r\n        rPassword1:'123456',\r\n        rPassword2:'123456'\r\n    })\r\n    const {rName,rEmail,rPassword1,rPassword2} = formRegisterValues;\r\n    const {lEmail,lPassword} = formLoginValues;\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail,lPassword))\r\n    }\r\n    const handleRegister = (e) =>{\r\n        e.preventDefault();\r\n        if(rPassword1 !==rPassword2){\r\n            return Swal.fire('Error','Las contraseñas tienen que coincidir','error')\r\n        }\r\n        dispatch(startRegister(rEmail,rPassword1,rName))\r\n    }\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLogInputChange}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLogInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout())\r\n    }\r\n\r\n  return <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">\r\n          {name}\r\n      </span>\r\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n          <i className=\"fas fa-sign-out-alt\"></i>\r\n          <span>Salir</span>\r\n      </button>\r\n  </div>;\r\n};\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({type:types.uiOpenModal})\r\nexport const uiCloseModal = () => ({type:types.uiCloseModal})","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport {  eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nif(process.env.NODE_ENV!=='test'){\n    Modal.setAppElement('#root');\n}\n\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n            setDateStart(activeEvent.start)\n            setDateEnd(activeEvent.end)\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n        console.log(formValues)\n        if ( activeEvent ) {\n            dispatch(eventStartUpdate(formValues) )\n        } else {\n            dispatch( eventStartAddNew(formValues) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n          ariaHideApp={process.env.NODE_ENV !== 'test'}\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () =>{\r\n        dispatch(uiOpenModal())\r\n    }\r\n  return <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\r\n      <i className=\"fas fa-plus\"></i>\r\n  </button>;\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {  eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () =>{\r\n    dispatch(eventStartDelete())\r\n  }\r\n  return <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n      <i className=\"fas fa-trash\"></i>\r\n      <span>Borrar Elemento</span>\r\n  </button>;\r\n};\r\n","import React, { useState, useEffect} from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\nuseEffect(() => {\n    dispatch(eventStartLoading())\n\n}, [dispatch]);\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        const style = {\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) &&<DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ?( <Redirect to=\"/\" /> )\n                    :( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React,{useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    \r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const {checking,uid} = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    \r\n    }, [dispatch]);\r\n\r\n    if(checking){\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute isAuthenticated={!!uid}  path=\"/login\" component={LoginScreen} />\r\n                    <PrivateRoute isAuthenticated={!!uid} exact path=\"/calendar\" component={CalendarScreen} />\r\n                    <Redirect to=\"/calendar\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>)\r\n\r\n\r\n\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking:true\r\n\r\n}\r\n\r\nexport const authReducer = (state = initialState,action) =>{\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking:false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking:false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                cheking:false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\n/* {\r\n    id:new Date().getTime(),\r\n    title:'Cumpleaños del jefe',\r\n    start: moment().toDate(),\r\n    end:moment().add(2,'hours').toDate(),\r\n    bgcolor:'#fafafa',\r\n    notes:'comprar pan',\r\n    user:{\r\n        _id:'123',\r\n        name:'Fernando'\r\n    }\r\n} */\r\n\r\nconst initialState ={\r\n    events:[],\r\n    activeEvent:null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState,action) =>{\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent:action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events:[\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent:null\r\n            } \r\n        case types.eventUpdated:\r\n        return{\r\n                ...state,\r\n                events: state.events.map(e =>(e.id === action.payload.id) ? action.payload : e )\r\n            }     \r\n        case types.eventDeleted:\r\n        return{\r\n                ...state,\r\n                events: state.events.map(e =>(e.id !== state.activeEvent.id) ? action.payload : e ),\r\n                activeEvent:null\r\n            }   \r\n\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events:[...action.payload]\r\n\r\n            }\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen:false\r\n}\r\n\r\nexport const uiReducer = (state=initialState,action) =>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return{...state,modalOpen:true}\r\n        case types.uiCloseModal:\r\n            \r\n            return{...state,modalOpen:false}\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui:uiReducer,\r\n    calendar:calendarReducer,\r\n    auth:authReducer\r\n})","import { createStore,compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)","import React from 'react';\nimport { AppRouter } from './router/AppRouter';\nimport {Provider} from 'react-redux';\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n        <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}